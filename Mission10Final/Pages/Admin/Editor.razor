@page "/admin/books/detailsedit/{id:long}"
@page "/admin/books/detailscreate"
@inherits OwningComponentBase<IBookRepository>

<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500;
    }
</style>
<h3>@TitleText a Book</h3>
<EditForm Model="b" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label>Book ID: </label>
        <input class="form-control" disabled value="@b.BookID" />
    </div>

    <div class="form-group">
        <label>Title: </label>
        <ValidationMessage For="@(() => b.Title)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Title"></InputText>
    </div>

    <div class="form-group">
        <label>Author: </label>
        <ValidationMessage For="@(() => b.Author)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Author"></InputText>
    </div>

    <div class="form-group">
        <label>Publisher: </label>
        <ValidationMessage For="@(() => b.Publisher)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Publisher"></InputText>
    </div>

    <div class="form-group">
        <label>ISBN: </label>
        <ValidationMessage For="@(() => b.ISBN)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.ISBN"></InputText>
    </div>

    <div class="form-group">
        <label>Classification: </label>
        <ValidationMessage For="@(() => b.Classification)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Classification"></InputText>
    </div>

    <div class="form-group">
        <label>Category: </label>
        <ValidationMessage For="@(() => b.Category)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Category"></InputText>
    </div>

    <div class="form-group">
        <label>Page Count: </label>
        <ValidationMessage For="@(() => b.PageCount)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="@b.PageCount"></InputNumber>
    </div>

    <div class="input-group">
        <ValidationMessage For="@(() => b.Price)"></ValidationMessage>
        <span class="input-group-text">$</span>
        <span class="input-group-text">0.00</span>
        <InputNumber class="form-control" @bind-Value="@b.Price"></InputNumber>
    </div>

    <button class="btn btn-@ThemColor" type="submit">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>
</EditForm>

@code {

    // Id passed through the url
    [Parameter]
    public long Id { get; set; } = 0;
    // Set a theme color
    public string ThemColor => Id == 0 ? "primary" : "warning";
    // Set a title text
    public string TitleText => Id == 0 ? "Create" : "Edit";

    // Get a book info  (Default: new Book())
    public Book b { get; set; } = new Book();
    // Get a Book repo
    public IBookRepository repo => Service;

    // On parameter set
    protected override void OnParametersSet()
    {
        // When the id is 0 (no record in the DB)
        if (Id != 0)
        {
            b = repo.Books.FirstOrDefault(x => x.BookID == Id);
        }
    }

    public void SaveBook()
    {
        // When the id is 0 (no record in the DB)
        if (Id == 0)
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }
        // Navigate to the main admin page with forcefully bringing the database info from the server
        NavManager.NavigateTo("/admin/books", true);
    }

    // Inject Navigation Manager
    [Inject]
    public NavigationManager NavManager { get; set; }

}
